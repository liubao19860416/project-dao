<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	
	<!-- 制定mysql的驱动包的路径 千万别放中文路径下 -->
	<!-- <classPathEntry location="D:\devtools\repository\mysql\mysql-connector-java\5.1.29\mysql-connector-java-5.1.29.jar" /> -->
	
	<context id="testTables" targetRuntime="MyBatis3">
		<commentGenerator>
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="true" />
		</commentGenerator>
		
		<!--mysql数据库连接的信息：驱动类、连接地址、用户名、密码 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://localhost:3306/grape20" userId="root" password="root">
		</jdbcConnection>
		
		<!--oracle数据库连接的信息：驱动类、连接地址、用户名、密码 -->
		<!-- <jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver" connectionURL="jdbc:oracle:thin:@192.168.56.101:1521:orcl" 
			userId="yycg" password="yycg"> </jdbcConnection> -->
		
		<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- targetProject:生成PO类的位置 -->
		<javaModelGenerator targetPackage="com.saike.grape.sql.po" targetProject=".\src\main\java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
			<!-- 从数据库返回的值被清理前后的空格 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- targetProject:生成的mapper映射文件生成的位置 -->
		<sqlMapGenerator targetPackage="com.saike.grape.sql.mapper" targetProject=".\src\main\java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>

		<!-- targetPackage：mapper接口生成的位置 -->
		<javaClientGenerator type="XMLMAPPER" targetPackage="com.saike.grape.sql.mapper" targetProject=".\src\main\java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>
		
		<!-- schema="" 用户信息测试表 ，catalog="grape20"指定数据库表,delimitAllColumns="true"是限定的意思，加上后会导致生成的基本列名中每一个字段都有双引号而导致错误-->
		<table tableName="t_coupon" domainObjectName="Coupon" >
			<!-- 默认值 false，为 true 时生 成列名与数据库相同 -->
			<property name="useActualColumnNames" value="true" />
			<!--指定生成主 键的语句 -->
			<generatedKey column="id" sqlStatement="SELECT LAST_INSERT_ID()+1" />
			<!-- 指定生成列名的 替换规则 -->
			<columnRenamingRule searchString="_" replaceString="" />
			<!-- 忽略掉无需生成的列 -->
			<!-- <ignoreColumn column="description" /> -->
			<!-- 指定生成的列名 -->
			<!-- <columnOverride column="actived" property="states" /> -->
			<!-- 有些表的字段需要指定java类型 -->
			<columnOverride column="beginDatetime" javaType="java.sql.Timestamp" />
			<columnOverride column="endDatetime" javaType="java.sql.Timestamp" />
			<columnOverride column="createdDatetime" javaType="java.sql.Timestamp" />
			<columnOverride column="updatedDatetime" javaType="java.sql.Timestamp" />
		</table>

		<!-- 保养券信息表：过滤一些我们暂时不需要生成的方法 -->
		<table schema="" tableName="t_coupon" enableCountByExample="false"
			enableUpdateByExample="false" enableDeleteByExample="false"
			enableSelectByExample="false" selectByExampleQueryId="false">
		</table>

		<!-- 数据字典系统基本配置BASICINFO表信息 -->
		<!-- <table schema="" tableName="basicinfo"/> -->
	</context>
</generatorConfiguration>
